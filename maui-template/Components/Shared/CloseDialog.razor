<MudThemeProvider Theme="@theme"/>
<MudDialog CloseBuutton>
    <TitleContent>
        <MudText Typo="Typo.h6" Color="Color.Primary">
            确认关闭程序？
        </MudText>
    </TitleContent>
    <DialogContent>

    </DialogContent>
    <DialogActions>
        <MudCheckBox @bind-Value="isSavedChoice"
                     CheckedIcon="@Icons.Material.Filled.Circle"
                     UncheckedIcon="@Icons.Material.Outlined.Circle"
                     Color="Color.Primary"
                     UncheckedColor="Color.Dark">
            <MudText Typo="Typo.body1" Color="Color.Primary">记住我的选择</MudText>
        </MudCheckBox>
        <MudButton Variant="Variant.Filled" OnClick="@No" Color="Color.Primary">
            最小化到托盘
        </MudButton>
        <MudButton Variant="Variant.Filled" Onclick="@Yes" Color="Color.Primary">
            确定
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private bool _isSavedChoice;
    private bool isSavedChoice
    {
        get => _isSavedChoice;
        set
        {
            _isSavedChoice = value;
            OnIsSavedChoiceChanged.InvokeAsync(value);
        }
    }
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    private void Yes() => MudDialog.Close(DialogResult.Ok<bool>(true));
    private void No() => MudDialog.Close(DialogResult.Ok<bool>(false));
    private void Cancel() => MudDialog.Cancel();
    [Parameter]
    public EventCallback<bool> OnIsSavedChoiceChanged{ get; set; }
    private readonly MudTheme theme = new()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = "#5E35B1",
            Secondary = "#FFFFFF",
            Tertiary = "#B388FF",
            TextPrimary = "#212121",
            TextSecondary = "#101010",
            Background = "#EDE7F6",
        },
        PaletteDark = new PaletteDark()
        {
        }
    };
}
